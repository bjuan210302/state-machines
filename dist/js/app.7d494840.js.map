{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue","webpack:///./src/components/MachineButtons.vue","webpack:///./src/components/MachineButtons.vue?a495","webpack:///./src/components/DictionaryInput.vue","webpack:///./src/components/DictionaryInput.vue?a65a","webpack:///./src/components/machines/MooreMachineTable.vue","webpack:///./src/components/machines/MooreMachineTable.vue?d053","webpack:///./src/components/machines/MealyMachineTable.vue","webpack:///./src/components/machines/MealyMachineTable.vue?ada9","webpack:///./src/components/machines/MooreTableOutput.vue","webpack:///./src/components/machines/MooreTableOutput.vue?1acc","webpack:///./src/components/machines/MealyTableOutput.vue","webpack:///./src/components/machines/MealyTableOutput.vue?1206","webpack:///./src/App.vue?dfb6","webpack:///./src/machineFunctions.js","webpack:///./src/store.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","role","machineType","ref","statesQchild","statesQ","inputsSchild","inputsS","calcOutputs","renderOutput","outputType","outPropsRelated","parseFinalPartition","outPropsMinimum","resetOutput","for","align","type","id","autocomplete","false-value","true-value","auxVal","machineTypeBool","computed","this","set","$store","commit","render","outputsR","sinput","qstate","index","index2","props","methods","parseTable","rows","document","getElementById","tBodies","parsedTable","staterow","stateid","innerHTML","cells","inputsSout","states","stateoutput","created","values","parsedMachine","components","MachineButtons","DictionaryInput","MooreMachineTable","MealyMachineTable","MooreTableOutput","MealyTableOutput","calcParsedTable","$refs","machineTable","state","getters","relatedEquivalentMachine","minimumEquivalentMachine","relatedequivalentMachine","ret","pf","finalPartition","forEach","calcRelatedEquivalentMachine","allStates","keys","reachableStates","calcReachableStates","nonReachableStates","filter","includes","statekey","calcMinimumEquivalentMachine","related","statesSuccessors","extracStateSuccessors","statesOutputs","extractStateOutputs","p0","calcP0Moore","calcP0Mealy","findpf","newMachine","assemble","tree","Tree","added","reduce","groups","concat","classes","globalKey","output","flag","existingOutput","arraysEquals","areArraysIdentical","classKey","find","stateSucessors","pi","newBlocksId","block","blocktoProccess","lastKey","shouldBeInSameBlock","areMatrixesIdentical","successors1","successors2","partition","s1i","s2i","sameState","mooreAssembler","mealyAssembler","machine","representator","aux","suc","succStateKey","findBlockOf","sucesor","arr1","arr2","mat1","mat2","StateNode","children","child","root","addChildrenOf","parent","newChildren","every","v","newAdded","childKey","addChild","element","store","createStore","mutations","setStatesQ","replace","split","String","setInputsS","setOutputsR","eqMachine","setMachineType","setParsedTable","setRenderOutput","app","createApp","App","use","mount"],"mappings":"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","file":"js/app.7d494840.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/state_machines/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","<template>\n  <div class=\"row justify-content-center shadow-lg vh-100\">\n    <MachineButtons></MachineButtons>\n\n    <!--Inputs-->\n    <div class=\"col-6 bg-light h-100\">\n      <DictionaryInput></DictionaryInput>\n\n      <div v-if=\"machineType\">\n        <MooreMachineTable\n          ref=\"machineTable\"\n          :statesQchild=\"statesQ\"\n          :inputsSchild=\"inputsS\"\n        ></MooreMachineTable>\n      </div>\n      <div v-else>\n        <MealyMachineTable\n          ref=\"machineTable\"\n          :statesQchild=\"statesQ\"\n          :inputsSchild=\"inputsS\"\n        ></MealyMachineTable>\n      </div>\n\n      <div class=\"d-flex flex-row justify-content-end\">\n        <button class=\"btn btn-dark m-2\" @click=\"calcOutputs\">Calculate</button>\n      </div>\n    </div>\n\n    <!--Outputs-->\n    <div class=\"col-6 bg-secondary\">\n      <div class=\"row\">\n        <div v-if=\"renderOutput\">\n          <div class=\"alert alert-secondary my-2\" role=\"alert\">\n            Machine with accessible states only:\n          </div>\n          <component :is=\"outputType\" v-bind=\"outPropsRelated\"></component>\n\n          <hr />\n\n          <div class=\"alert alert-secondary\" role=\"alert\">\n            Minimum Equivalent Machine:\n          </div>\n          <div class=\"alert alert-dark col-6\" role=\"alert\">\n            {{ parseFinalPartition }}\n          </div>\n          <component :is=\"outputType\" v-bind=\"outPropsMinimum\"></component>\n\n          <div class=\"d-flex flex-row justify-content-end\">\n            <button class=\"btn btn-dark m-2\" @click=\"resetOutput\">Reset</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable vue/no-unused-components */\nimport MachineButtons from \"./components/MachineButtons.vue\";\nimport DictionaryInput from \"./components/DictionaryInput.vue\";\nimport MooreMachineTable from \"./components/machines/MooreMachineTable.vue\";\nimport MealyMachineTable from \"./components/machines/MealyMachineTable.vue\";\nimport MooreTableOutput from \"./components/machines/MooreTableOutput.vue\";\nimport MealyTableOutput from \"./components/machines/MealyTableOutput.vue\";\n\nexport default {\n  name: \"App\",\n\n  components: {\n    MachineButtons,\n    DictionaryInput,\n    MooreMachineTable,\n    MealyMachineTable,\n    MooreTableOutput,\n    MealyTableOutput,\n  },\n\n  methods: {\n    calcParsedTable() {\n      this.$refs.machineTable.parseTable();\n    },\n\n    calcOutputs() {\n      this.calcParsedTable();\n      this.$store.commit(\"calcRelatedEquivalentMachine\");\n      this.$store.commit(\"calcMinimumEquivalentMachine\");\n\n      this.$store.commit(\"setRenderOutput\", true);\n    },\n\n    resetOutput() {\n      this.$store.commit(\"setRenderOutput\", false);\n    },\n  },\n  computed: {\n    statesQ: {\n      get() {\n        return this.$store.state.statesQ;\n      },\n    },\n\n    inputsS: {\n      get() {\n        return this.$store.state.inputsS;\n      },\n    },\n\n    outputsR: {\n      get() {\n        return this.$store.state.outputsR;\n      },\n    },\n\n    machineType: {\n      get() {\n        return this.$store.getters.machineType;\n      },\n      set(value) {\n        this.$store.commit(\"setMachineType\", value);\n      },\n    },\n\n    parsedTable: {\n      get() {\n        return this.$store.getters.parsedTable;\n      },\n    },\n\n    renderOutput: {\n      get() {\n        return this.$store.getters.renderOutput;\n      },\n    },\n\n    outputType() {\n      return this.machineType ? MooreTableOutput : MealyTableOutput;\n    },\n\n    outPropsRelated() {\n      return {\n        parsedMachine: this.relatedEquivalentMachine,\n        inputsSchild: this.inputsS,\n      };\n    },\n\n    outPropsMinimum() {\n      return {\n        parsedMachine: this.minimumEquivalentMachine,\n        inputsSchild: this.inputsS,\n      };\n    },\n\n    relatedEquivalentMachine: {\n      get() {\n        return this.$store.getters.relatedequivalentMachine;\n      },\n    },\n\n    minimumEquivalentMachine: {\n      get() {\n        return this.$store.getters.minimumEquivalentMachine;\n      },\n    },\n\n    parseFinalPartition() {\n      var ret = \"Final partition: \";\n      const pf = Object.values(this.$store.getters.finalPartition);\n\n      pf.forEach(function (state, i) {\n        ret += \"q\" + i + \": (\" + state + \"), \";\n      });\n      return ret;\n    },\n  },\n};\n</script>\n\n<style>\n</style>\n","<template>\r\n  <div class=\"row bg-dark align-items-start py-3 px-0\">\r\n      <div class=\"col-6 px-0\">\r\n        <div class=\"btn-group col-12 px-3\" role=\"group\">\r\n          <input\r\n            type=\"checkbox\"\r\n            class=\"btn-check\"\r\n            id=\"btnmealy\"\r\n            autocomplete=\"off\"\r\n            v-model=\"machineType\"\r\n            false-value=\"1\"\r\n            true-value=\"0\"\r\n          />\r\n          <label class=\"btn btn-outline-light\" for=\"btnmealy\"\r\n            >Mealy Machine</label\r\n          >\r\n\r\n          <input\r\n            type=\"checkbox\"\r\n            class=\"btn-check\"\r\n            id=\"btnmoore\"\r\n            autocomplete=\"off\"\r\n            v-model=\"machineType\"\r\n            false-value=\"0\"\r\n            true-value=\"1\"\r\n          />\r\n          <label class=\"btn btn-outline-light\" for=\"btnmoore\"\r\n            >Moore Machine</label\r\n          >\r\n        </div>\r\n      </div>\r\n\r\n      <h4 class=\"col-6 text-light h-100 my-0\" align=\"center\"> Results</h4>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data: function () {\r\n    return {\r\n      auxVal: 0, //0 for mealy 1 for moore\r\n      machineTypeBool: false, //false for mealy true for moore\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    machineType: {\r\n      get() {\r\n        return this.auxVal;\r\n      },\r\n      set(value) {\r\n        this.machineTypeBool = value == 1;\r\n        this.auxVal = value;\r\n        this.$store.commit(\"setMachineType\", this.machineTypeBool);\r\n      },\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import { render } from \"./MachineButtons.vue?vue&type=template&id=280aa4be\"\nimport script from \"./MachineButtons.vue?vue&type=script&lang=js\"\nexport * from \"./MachineButtons.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\r\n  <div class=\"row\">\r\n    <div class=\"card p-2\">\r\n      <div class=\"row pb-2\">\r\n        <label class=\"col-sm-2 col-form-label\">States [Q]</label>\r\n        <div class=\"col-sm-10\">\r\n          <input v-model=\"statesQ\" type=\"text\" class=\"form-control\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row pb-2\">\r\n        <label class=\"col-sm-2 col-form-label\">Inputs [S]</label>\r\n        <div class=\"col-sm-10\">\r\n          <input v-model=\"inputsS\" type=\"text\" class=\"form-control\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row pb-2\">\r\n        <label class=\"col-sm-2 col-form-label\">Outputs [R]</label>\r\n        <div class=\"col-sm-10\">\r\n          <input v-model=\"outputsR\" type=\"text\" class=\"form-control\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  computed: {\r\n    statesQ: {\r\n      set(value) {\r\n        this.$store.commit(\"setStatesQ\", value);\r\n      },\r\n    },\r\n\r\n    inputsS: {\r\n      set(value) {\r\n        this.$store.commit(\"setInputsS\", value);\r\n      },\r\n    },\r\n\r\n    outputsR: {\r\n      set(value) {\r\n        this.$store.commit(\"setOutputsR\", value);\r\n      },\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { render } from \"./DictionaryInput.vue?vue&type=template&id=0c27d392\"\nimport script from \"./DictionaryInput.vue?vue&type=script&lang=js\"\nexport * from \"./DictionaryInput.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"row p-2\">\r\n        \r\n          <table class=\"table table-dark table-bordered\" id=\"mooretable\">\r\n            <thead>\r\n              <tr >\r\n                <th class=\"table-bordered\">State</th>\r\n                <th class=\"table-bordered\" v-for=\"sinput in inputsSchild\" :key=\"sinput\"> {{ sinput }}</th>\r\n                <th class=\"table-bordered\">Output</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              <tr class=\"table-bordered\" v-for=\"(qstate, index) in statesQchild\" :key=\"qstate\">\r\n                <th class=\"table-bordered\" :id=\"'statename-' + index\">{{ qstate }}</th>\r\n                \r\n                <th v-for=\"(sinput, index2) in inputsSchild\" :key=\"sinput\" class=\"table-bordered\">\r\n                  <input type=\"text\" class=\"form-control\" :id=\"'nextstate-' + index + ',' + index2\">\r\n                </th>\r\n\r\n                <th class=\"table-bordered\">\r\n                  <input type=\"text\" class=\"form-control table-bordered\" :id=\"'stateoutput-' + index\">\r\n                </th>\r\n                \r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n    props:['statesQchild','inputsSchild','outputsRchild'],\r\n\r\n    methods:{\r\n\r\n        parseTable(){\r\n\r\n            var rows = document.getElementById('mooretable').tBodies[0].rows\r\n\r\n            var parsedTable = {}\r\n\r\n            for (var i = 0; i < rows.length; i++) {\r\n\r\n                var staterow = {};\r\n                var stateid = document.getElementById('statename-' + i).innerHTML\r\n\r\n                staterow['stateoutput'] = document.getElementById('stateoutput-' + i).value\r\n\r\n                //Ends at row.cells.length-2 because we already have the value of the last cell (stateoutput)\r\n                //And one of the columns is not needed (statename)\r\n                for (var j = 0; j < rows[i].cells.length - 2; j++) {\r\n                    staterow['sucesor-' + j] = document.getElementById('nextstate-' + i + ',' + j).value\r\n                }\r\n\r\n                parsedTable[stateid] = staterow\r\n\r\n            }\r\n\r\n            this.$store.commit('setParsedTable', parsedTable)\r\n        }\r\n\r\n    }\r\n    \r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./MooreMachineTable.vue?vue&type=template&id=3a6234a2\"\nimport script from \"./MooreMachineTable.vue?vue&type=script&lang=js\"\nexport * from \"./MooreMachineTable.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"row p-2\">\r\n        \r\n          <table class=\"table table-dark table-bordered\" id=\"mealytable\">\r\n            <thead>\r\n              <tr >\r\n                <th class=\"table-dark\">State</th>\r\n                <th class=\"table-dark\" v-for=\"sinput in inputsSchild\" :key=\"sinput\"> {{ sinput }}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              <tr class=\"table-bordered\" v-for=\"(qstate, index) in statesQchild\" :key=\"qstate\">\r\n                <th class=\"table-bordered\" :id=\"'statename-' + index\">{{ qstate }}</th>\r\n                \r\n                <th v-for=\"(sinput, index2) in inputsSchild\" :key=\"sinput\" class=\"table-bordered\">\r\n                    <input type=\"text\" class=\"form-control\" :id=\"'nextstate-' + index + ',' + index2\">\r\n                    <input type=\"text\" class=\"form-control\" :id=\"'output-' + index + ',' + index2\">\r\n                </th>\r\n                \r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n    props:['statesQchild','inputsSchild','outputsRchild'],\r\n\r\n    methods:{\r\n\r\n        parseTable(){\r\n            var rows = document.getElementById('mealytable').tBodies[0].rows\r\n\r\n            var parsedTable = {}\r\n\r\n            for (var i = 0; i < rows.length; i++) {\r\n\r\n                var staterow = {};\r\n\r\n                var stateid = document.getElementById('statename-' + i).innerHTML\r\n\r\n                //Ends at row.cells.length-1 because the first cell (statename) is on the table but wasn't assigned an id\r\n                for (var j = 0; j < rows[i].cells.length - 1; j++) {\r\n                    staterow['sucesor-' + j] = [\r\n                            document.getElementById('nextstate-' + i + ',' + j).value,\r\n                            document.getElementById('output-' + i + ',' + j).value,\r\n                        ]\r\n                }\r\n\r\n                parsedTable[stateid] = staterow\r\n\r\n            }\r\n\r\n            this.$store.commit('setParsedTable', parsedTable)\r\n        }\r\n\r\n    }\r\n    \r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./MealyMachineTable.vue?vue&type=template&id=0be486da\"\nimport script from \"./MealyMachineTable.vue?vue&type=script&lang=js\"\nexport * from \"./MealyMachineTable.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\r\n  <div class=\"row p-2\">\r\n    <table class=\"table table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th class=\"table-dark\">State</th>\r\n          <th class=\"table-dark\" v-for=\"sinput in inputsSout\" :key=\"sinput\">\r\n            {{ sinput }}\r\n          </th>\r\n          <th class=\"table-dark\">Output</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr\r\n          class=\"table-dark\"\r\n          v-for=\"(qstate, index) in states\"\r\n          :key=\"qstate\"\r\n        >\r\n          <th class=\"table-dark\">q {{ index }} </th>\r\n\r\n          <th\r\n            v-for=\"(sinput, index2) in inputsSout\"\r\n            :key=\"sinput\"\r\n            class=\"table-dark\"\r\n          >\r\n            <div>{{ qstate['sucesor-' + index2] }}</div>\r\n            \r\n          </th>\r\n\r\n          <th class=\"table-dark\">\r\n            <div>{{ qstate.stateoutput }}</div>\r\n          </th>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['parsedMachine', 'inputsSchild'],\r\n  \r\n  data() {\r\n    return{\r\n        states: [],\r\n        inputsSout: []\r\n    }\r\n  },\r\n\r\n  created(){\r\n      this.inputsSout = this.inputsSchild.slice()\r\n      this.states = Object.values(this.parsedMachine)\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>","import { render } from \"./MooreTableOutput.vue?vue&type=template&id=6ee1a60a\"\nimport script from \"./MooreTableOutput.vue?vue&type=script&lang=js\"\nexport * from \"./MooreTableOutput.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\r\n  <div class=\"row p-2\">\r\n    <table class=\"table table-borderedtable-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th class=\"table-dark\">State</th>\r\n          <th class=\"table-dark\" v-for=\"sinput in inputsSout\" :key=\"sinput\">\r\n            {{ sinput }}\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr\r\n          class=\"table-dark\"\r\n          v-for=\"(qstate, index) in states\"\r\n          :key=\"qstate\"\r\n        >\r\n          <th class=\"table-dark\">q {{ index }} </th>\r\n\r\n          <th\r\n            v-for=\"(sinput, index2) in inputsSout\"\r\n            :key=\"sinput\"\r\n            class=\"table-dark\"\r\n          >\r\n            <div>{{ qstate['sucesor-' + index2][0] }}, {{ qstate['sucesor-' + index2][1] }}</div>\r\n            \r\n          </th>\r\n          \r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['parsedMachine', 'inputsSchild'],\r\n  \r\n  data() {\r\n    return{\r\n        states: [],\r\n        inputsSout: []\r\n    }\r\n  },\r\n\r\n  created(){\r\n      this.inputsSout = this.inputsSchild.slice()\r\n      this.states = Object.values(this.parsedMachine)\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>","import { render } from \"./MealyTableOutput.vue?vue&type=template&id=36cd1d0e\"\nimport script from \"./MealyTableOutput.vue?vue&type=script&lang=js\"\nexport * from \"./MealyTableOutput.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=fd1eac70\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","export function calcRelatedEquivalentMachine(parsedTable, machineType) {\r\n    var allStates = Object.keys(parsedTable);\r\n    var reachableStates = calcReachableStates(parsedTable, machineType)\r\n    var nonReachableStates = allStates.filter(n => !reachableStates.includes(n))\r\n\r\n    nonReachableStates.forEach(statekey => {\r\n        delete parsedTable[statekey]\r\n    })\r\n\r\n    return parsedTable\r\n}\r\n\r\nexport function calcMinimumEquivalentMachine(parsedTable, machineType) {\r\n\r\n    var related = calcRelatedEquivalentMachine(parsedTable, machineType)\r\n\r\n    var statesSuccessors = extracStateSuccessors(related, machineType)\r\n    var statesOutputs = extractStateOutputs(related, machineType)\r\n    var p0 = (machineType) ? calcP0Moore(statesOutputs) : calcP0Mealy(statesOutputs)\r\n\r\n    var pf = findpf(statesSuccessors, p0)\r\n    var newMachine = assemble(pf, statesSuccessors, statesOutputs, machineType)\r\n\r\n    return [pf, newMachine]\r\n    \r\n}\r\n\r\nfunction calcReachableStates(parsedTable, machineType) {\r\n    var statesSuccessors = extracStateSuccessors(parsedTable, machineType)\r\n\r\n    var tree = new Tree(statesSuccessors)\r\n\r\n    return tree.added\r\n}\r\n\r\nfunction calcP0Moore(statesOutputs) {\r\n    var p0 = Object.keys(statesOutputs).reduce(\r\n        function (groups, key) {\r\n            var value = statesOutputs[key]\r\n            groups[value] = (groups[value] || []).concat(key)\r\n            return groups\r\n        },\r\n        {}\r\n    )\r\n\r\n    return Object.values(p0)\r\n}\r\n\r\nfunction calcP0Mealy(statesOutputs) {\r\n    var classes = {}\r\n    var globalKey = 0\r\n\r\n    var p0 = Object.keys(statesOutputs).reduce(\r\n        function (groups, key) {\r\n            var output = statesOutputs[key]\r\n\r\n            var flag = false;\r\n            Object.values(classes).forEach(function (existingOutput) {\r\n\r\n                var arraysEquals = areArraysIdentical(existingOutput, output)\r\n                if (arraysEquals) {\r\n                    var classKey = Object.keys(classes).find(key => areArraysIdentical(existingOutput, classes[key]))\r\n                    groups[classKey] = (groups[classKey] || []).concat(key)\r\n                    flag = true\r\n                }\r\n\r\n            })\r\n\r\n            if (!flag) {\r\n                classes[globalKey] = [].concat(output)\r\n                groups[globalKey] = (groups[globalKey] || []).concat(key)\r\n                globalKey++\r\n\r\n            }\r\n\r\n\r\n            return groups\r\n        },\r\n        {}\r\n    )\r\n\r\n    return Object.values(p0)\r\n}\r\n\r\nfunction findpf(stateSucessors, pi) {\r\n    var pf = {}\r\n    var newBlocksId = 0;\r\n\r\n    Object.values(pi).forEach(function (block) {\r\n\r\n        var blocktoProccess = block.slice()\r\n\r\n        do {\r\n\r\n            var lastKey = ''\r\n\r\n            for (var i = 0; i < blocktoProccess.length;) {\r\n                var state = blocktoProccess[i]\r\n\r\n                if (lastKey == '') {\r\n                    pf[newBlocksId] = [state]\r\n                    blocktoProccess.shift()\r\n                    lastKey = state\r\n                    newBlocksId++\r\n                } else {\r\n                    if (shouldBeInSameBlock(stateSucessors[state], stateSucessors[lastKey], pi) == 1) {\r\n                        pf[newBlocksId - 1].push(state)\r\n                        blocktoProccess.splice(i, 1)\r\n                        lastKey = state\r\n                    } else {\r\n                        i++\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        } while (blocktoProccess.length > 0)\r\n\r\n    })\r\n\r\n    return (areMatrixesIdentical(pi, pf)) ? pf : findpf(stateSucessors, pf)\r\n}\r\n\r\nfunction shouldBeInSameBlock(successors1, successors2, partition) {\r\n\r\n    var flag = 1;\r\n\r\n    for (var i = 0; i < successors1.length && flag == 1; i++) {\r\n\r\n        var s1i = successors1[i]\r\n        var s2i = successors2[i]\r\n\r\n        var sameState = (s1i == s2i)\r\n\r\n        for (var j = 0; j < Object.values(partition).length && !sameState; j++) {\r\n            var block = Object.values(partition)[j]\r\n\r\n            sameState = block.includes(s1i) && block.includes(s2i)\r\n        }\r\n\r\n        flag = flag * sameState\r\n\r\n    }\r\n\r\n    return flag;\r\n}\r\n\r\nfunction assemble(pf, statesSuccessors, statesOutputs, machineType){\r\n\r\n    if (machineType) return mooreAssembler(pf, statesSuccessors, statesOutputs)\r\n    else return mealyAssembler(pf, statesSuccessors, statesOutputs)\r\n\r\n}\r\n\r\nfunction mooreAssembler(pf, statesSuccessors, statesOutputs){\r\n    var machine = {}\r\n\r\n    Object.values(pf).forEach(function(value, i){\r\n        var representator = value[0]\r\n        machine['q'+i] = {}\r\n        machine['q'+i].stateoutput = statesOutputs[representator]\r\n        \r\n        var aux = statesSuccessors[representator]\r\n        aux.forEach(function(suc, j){\r\n\r\n            //This line finds the key of the successor block of this state\r\n            //Doing this to put the key as a the successor instead of the array itself\r\n            var succStateKey = Object.keys(pf).find(\r\n                key => areArraysIdentical(findBlockOf(suc, pf), pf[key])\r\n            \r\n            )\r\n            machine['q'+i]['sucesor-' + j] = 'q'+succStateKey\r\n        })\r\n    })\r\n\r\n    return machine\r\n}\r\n\r\nfunction mealyAssembler(pf, statesSuccessors, statesOutputs){\r\n    var machine = {}\r\n    \r\n\r\n    Object.values(pf).forEach(function(value, i){\r\n        var representator = value[0]\r\n        machine['q'+i] = {}\r\n        var aux = statesSuccessors[representator]\r\n        aux.forEach(function(suc, j){\r\n\r\n            //This line finds the key of the successor block of this state\r\n            //Doing this to put the key as a the successor instead of the array itself\r\n            var succStateKey = Object.keys(pf).find(\r\n                key => areArraysIdentical(findBlockOf(suc, pf), pf[key])\r\n            \r\n            )\r\n            machine['q'+i]['sucesor-' + j] = [\r\n                'q'+succStateKey,\r\n                statesOutputs[representator][j]\r\n            ]\r\n        })\r\n\r\n    })\r\n\r\n    return machine\r\n}\r\n\r\nfunction findBlockOf(state, pf){\r\n    var ret = null\r\n\r\n    Object.values(pf).forEach(function(block){\r\n        if(block.includes(state)){\r\n            ret = block\r\n        }\r\n    })\r\n\r\n    return ret\r\n}\r\n\r\n/**\r\n * Parsed table is an object in with the shape given by the MooreMachineTable and MealyMachineTable formatters\r\n * \r\n * Outputs an object with the shape key: []\r\n * A key is a state and its value is an array containing the states it(the key-state) leads to\r\n */\r\nfunction extracStateSuccessors(parsedTable, machineType) {\r\n    var statesSuccessors = {}\r\n\r\n    if (machineType) {\r\n        Object.keys(parsedTable).forEach(statekey => {\r\n            //The slice is to exclude the stateoutput value\r\n            statesSuccessors[statekey] = Object.values(parsedTable[statekey]).slice(1)\r\n        })\r\n    } else {\r\n        Object.keys(parsedTable).forEach(statekey => {\r\n            var values = []\r\n            Object.keys(parsedTable[statekey]).forEach(sucesor => {\r\n                values.push(parsedTable[statekey][sucesor][0])\r\n            })\r\n            statesSuccessors[statekey] = values\r\n        });\r\n    }\r\n\r\n    return statesSuccessors\r\n}\r\n\r\n/**\r\n * Parsed table is an object in with the shape given by the MooreMachineTable and MealyMachineTable formatters\r\n * \r\n * Outputs an object with the shape key: []\r\n * A key is a state and its value is an array containing the symbols it(the key-state) outputs.\r\n */\r\nfunction extractStateOutputs(parsedTable, machineType) {\r\n    var statesOutputs = {}\r\n\r\n    if (machineType) {\r\n        Object.keys(parsedTable).forEach(statekey => {\r\n            statesOutputs[statekey] = parsedTable[statekey].stateoutput\r\n        })\r\n    } else {\r\n        Object.keys(parsedTable).forEach(statekey => {\r\n            var values = []\r\n            Object.keys(parsedTable[statekey]).forEach(sucesor => {\r\n                values.push(parsedTable[statekey][sucesor][1])\r\n            })\r\n            statesOutputs[statekey] = values\r\n        });\r\n    }\r\n\r\n    return statesOutputs\r\n\r\n}\r\n\r\nfunction areArraysIdentical(arr1, arr2) {\r\n    if (arr1.length !== arr2.length) return false;\r\n\tfor (var i = 0; i < arr1.length; i++) {\r\n\t\tif (arr1[i] !== arr2[i]) return false;\r\n\t}\r\n\treturn true;\r\n}\r\nfunction areMatrixesIdentical(mat1, mat2) {\r\n    if (mat1.length !== mat2.length) return false;\r\n\tfor (var i = 0; i < mat1.length; i++) {\r\n\t\tif (!areArraysIdentical(mat1[i], mat2[i])) return false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n//<--------------------------- TREE --------------------------->\r\n\r\nclass StateNode {\r\n    constructor(id) {\r\n        this.id = id\r\n        this.children = []\r\n    }\r\n\r\n    addChild(child) {\r\n        this.children.push(child)\r\n    }\r\n}\r\n\r\n/**\r\n * We don't really need a Tree with the states, but it is a simple, fast way of finding wich states\r\n * are reachable and wich are not\r\n */\r\nclass Tree {\r\n    /**\r\n     * States is an object with the shape key: []\r\n     * A key is a state and its value is an array containing the states it(the key-state) leads to\r\n     */\r\n    constructor(states) {\r\n        this.states = states\r\n        this.keys = Object.keys(states)\r\n        this.root = new StateNode(this.keys[0])\r\n\r\n        this.added = []\r\n        this.added.push(this.keys[0])\r\n\r\n        //Building the tree\r\n        this.addChildrenOf(this.root)\r\n    }\r\n\r\n    /**\r\n     * Parent is a node with an id that is contained in the this.keys (Object.keys(states))  array\r\n     */\r\n    addChildrenOf(parent) {\r\n        var newChildren = this.states[parent.id]\r\n\r\n        //This if checks if ALL of the newChildren to be added are already added\r\n        if (newChildren.every(v => this.added.includes(v))) {\r\n            return\r\n        }\r\n\r\n        var newAdded = [] //Array of StateNodes, to store the nodes added in this invocation\r\n        newChildren.forEach(childKey => {\r\n\r\n            //if is not already added\r\n            if (!this.added.includes(childKey)) {\r\n                var aux = new StateNode(childKey)\r\n                parent.addChild(aux)\r\n                this.added.push(childKey)\r\n                newAdded.push(aux)\r\n            }\r\n\r\n        });\r\n\r\n        newAdded.forEach(element => {\r\n            this.addChildrenOf(element)\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { createStore } from \"vuex\" \r\nimport { calcRelatedEquivalentMachine } from './machineFunctions.js'\r\nimport { calcMinimumEquivalentMachine } from './machineFunctions.js'\r\n\r\nconst store = createStore({\r\n   state:{\r\n       statesQ: [],\r\n       inputsS: [],\r\n       outputsR: [],\r\n\r\n       relatedequivalentMachine: {},\r\n       minimumEquivalentMachine: {},\r\n       finalPartition: [],\r\n       renderOutput: false,\r\n\r\n       machineType: false, //false for Mealy, true for Moore\r\n       parsedTable: {}\r\n      \r\n   },\r\n\r\n   getters:{\r\n        machineType(state){\r\n            return state.machineType\r\n        },\r\n\r\n        parsedTable(state){\r\n            return state.parsedTable\r\n        },\r\n\r\n        relatedequivalentMachine(state){\r\n            return state.relatedequivalentMachine\r\n        },\r\n\r\n        minimumEquivalentMachine(state){\r\n            return state.minimumEquivalentMachine\r\n        },\r\n\r\n        renderOutput(state){\r\n            return state.renderOutput\r\n        },\r\n\r\n        finalPartition(state){\r\n            return state.finalPartition\r\n        }\r\n   },\r\n\r\n   mutations:{\r\n    setStatesQ(state, value){\r\n        state.statesQ = value.replace(/\\s/g, '').split(',').filter(String)\r\n    },\r\n\r\n    setInputsS(state, value){\r\n        state.inputsS = value.replace(/\\s/g, '').split(',').filter(String)\r\n    },\r\n\r\n    setOutputsR(state, value){\r\n        state.outputsR = value.replace(/\\s/g, '').split(',').filter(String)\r\n    },\r\n\r\n    calcRelatedEquivalentMachine(state){\r\n        state.relatedequivalentMachine = calcRelatedEquivalentMachine(state.parsedTable, state.machineType);\r\n    },\r\n\r\n    calcMinimumEquivalentMachine(state){\r\n        var eqMachine = calcMinimumEquivalentMachine(state.parsedTable, state.machineType)\r\n        state.finalPartition = eqMachine[0]\r\n        state.minimumEquivalentMachine = eqMachine[1]\r\n    },\r\n\r\n    setMachineType(state, value){\r\n        state.machineType = value\r\n        state.renderOutput = false\r\n    },\r\n\r\n    setParsedTable(state, value){\r\n        state.parsedTable = value\r\n    },\r\n\r\n    setRenderOutput(state, value){\r\n        state.renderOutput = value\r\n    }\r\n   }\r\n})\r\n\r\nexport default store","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from \"./store\"\n\nconst app = createApp(App)\napp.use(store)\napp.mount('#app')"],"sourceRoot":""}